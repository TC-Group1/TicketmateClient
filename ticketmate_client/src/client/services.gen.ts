// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { PostProjectInsertProjectData, PostProjectInsertProjectError, PostProjectInsertProjectResponse, GetProjectGetProjectByGuidData, GetProjectGetProjectByGuidError, GetProjectGetProjectByGuidResponse, DeleteProjectDeleteProjectByGuidData, DeleteProjectDeleteProjectByGuidError, DeleteProjectDeleteProjectByGuidResponse, PutProjectUpdateProjectByGuidData, PutProjectUpdateProjectByGuidError, PutProjectUpdateProjectByGuidResponse, PostTicketInsertTicketData, PostTicketInsertTicketError, PostTicketInsertTicketResponse, GetTicketGetTicketByGuidData, GetTicketGetTicketByGuidError, GetTicketGetTicketByGuidResponse, PutTicketUpdateTicketByGuidData, PutTicketUpdateTicketByGuidError, PutTicketUpdateTicketByGuidResponse, DeleteTicketDeleteTicketByGuidData, DeleteTicketDeleteTicketByGuidError, DeleteTicketDeleteTicketByGuidResponse, DeleteUserDeleteUserByGuidData, DeleteUserDeleteUserByGuidError, DeleteUserDeleteUserByGuidResponse, GetUserGetUserByGuidData, GetUserGetUserByGuidError, GetUserGetUserByGuidResponse, PostUserInsertUserData, PostUserInsertUserError, PostUserInsertUserResponse, PutUserUpdateUserByGuidData, PutUserUpdateUserByGuidError, PutUserUpdateUserByGuidResponse } from './types.gen';

export const client = createClient(createConfig());

export const postProjectInsertProject = <ThrowOnError extends boolean = false>(options?: Options<PostProjectInsertProjectData, ThrowOnError>) => { return (options?.client ?? client).post<PostProjectInsertProjectResponse, PostProjectInsertProjectError, ThrowOnError>({
    ...options,
    url: '/Project/InsertProject'
}); };

export const getProjectGetProjectByGuid = <ThrowOnError extends boolean = false>(options?: Options<GetProjectGetProjectByGuidData, ThrowOnError>) => { return (options?.client ?? client).get<GetProjectGetProjectByGuidResponse, GetProjectGetProjectByGuidError, ThrowOnError>({
    ...options,
    url: '/Project/GetProjectByGuid'
}); };

export const deleteProjectDeleteProjectByGuid = <ThrowOnError extends boolean = false>(options?: Options<DeleteProjectDeleteProjectByGuidData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteProjectDeleteProjectByGuidResponse, DeleteProjectDeleteProjectByGuidError, ThrowOnError>({
    ...options,
    url: '/Project/DeleteProjectByGuid'
}); };

export const putProjectUpdateProjectByGuid = <ThrowOnError extends boolean = false>(options?: Options<PutProjectUpdateProjectByGuidData, ThrowOnError>) => { return (options?.client ?? client).put<PutProjectUpdateProjectByGuidResponse, PutProjectUpdateProjectByGuidError, ThrowOnError>({
    ...options,
    url: '/Project/UpdateProjectByGuid'
}); };

export const postTicketInsertTicket = <ThrowOnError extends boolean = false>(options?: Options<PostTicketInsertTicketData, ThrowOnError>) => { return (options?.client ?? client).post<PostTicketInsertTicketResponse, PostTicketInsertTicketError, ThrowOnError>({
    ...options,
    url: '/Ticket/InsertTicket'
}); };

export const getTicketGetTicketByGuid = <ThrowOnError extends boolean = false>(options?: Options<GetTicketGetTicketByGuidData, ThrowOnError>) => { return (options?.client ?? client).get<GetTicketGetTicketByGuidResponse, GetTicketGetTicketByGuidError, ThrowOnError>({
    ...options,
    url: '/Ticket/GetTicketByGuid'
}); };

export const putTicketUpdateTicketByGuid = <ThrowOnError extends boolean = false>(options?: Options<PutTicketUpdateTicketByGuidData, ThrowOnError>) => { return (options?.client ?? client).put<PutTicketUpdateTicketByGuidResponse, PutTicketUpdateTicketByGuidError, ThrowOnError>({
    ...options,
    url: '/Ticket/UpdateTicketByGuid'
}); };

export const deleteTicketDeleteTicketByGuid = <ThrowOnError extends boolean = false>(options?: Options<DeleteTicketDeleteTicketByGuidData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteTicketDeleteTicketByGuidResponse, DeleteTicketDeleteTicketByGuidError, ThrowOnError>({
    ...options,
    url: '/Ticket/DeleteTicketByGuid'
}); };

export const deleteUserDeleteUserByGuid = <ThrowOnError extends boolean = false>(options?: Options<DeleteUserDeleteUserByGuidData, ThrowOnError>) => { return (options?.client ?? client).delete<DeleteUserDeleteUserByGuidResponse, DeleteUserDeleteUserByGuidError, ThrowOnError>({
    ...options,
    url: '/User/DeleteUserByGuid'
}); };

export const getUserGetUserByGuid = <ThrowOnError extends boolean = false>(options?: Options<GetUserGetUserByGuidData, ThrowOnError>) => { return (options?.client ?? client).get<GetUserGetUserByGuidResponse, GetUserGetUserByGuidError, ThrowOnError>({
    ...options,
    url: '/User/GetUserByGuid'
}); };

export const postUserInsertUser = <ThrowOnError extends boolean = false>(options?: Options<PostUserInsertUserData, ThrowOnError>) => { return (options?.client ?? client).post<PostUserInsertUserResponse, PostUserInsertUserError, ThrowOnError>({
    ...options,
    url: '/User/InsertUser'
}); };

export const putUserUpdateUserByGuid = <ThrowOnError extends boolean = false>(options?: Options<PutUserUpdateUserByGuidData, ThrowOnError>) => { return (options?.client ?? client).put<PutUserUpdateUserByGuidResponse, PutUserUpdateUserByGuidError, ThrowOnError>({
    ...options,
    url: '/User/UpdateUserByGuid'
}); };